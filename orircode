.MODEL small

.STACK 256

.DATA

    TempW dw ?

    pointX dw ? 

    pointY dw ?

    point1X dw ? 

    point1Y dw ?

    point2X dw ? 

    point2Y dw ?

    Color db ?
    
    msg1 db 13,10,"enter a number between 051-320: $" 
    w equ 50  
    jmpLength dw 5    
    redLine dw ?
    yellowLine dw ?    
    xColor db 2
    h equ 25    
    logo db "  ____                                       ",13,10," |  _ \ _ __ ___  _ __   ___               ",13,10," | | | | '__/ _ \| '_ \ / _ \                 ",13,10," | |_| | | | (_) | | | |  __/                   ",13,10," |____/|_|  \___/|_| |_|\___|                ",13,10," |  _ \  ___ / _| ___ _ __   ___ ___       ",13,10," | | | |/ _ \ |_ / _ \ '_ \ / __/ _ \        ",13,10," | |_| |  __/  _|  __/ | | | (_|  __/          ",13,10," |____/ \___|_|  \___|_| |_|\___\___|       ",13,10," / ___| _   _ ___| |_ ___ _ __ ___          ",13,10," \___ \| | | / __| __/ _ \ '_ ` _ \           ",13,10,"  ___) | |_| \__ \ ||  __/ | | | | |            ",13,10," |____/ \__, |___/\__\___|_| |_| |_|         ",13,10,"        |___/                                  ",13,10,"$"
    

.CODE      
jmp start                                                  

;---------------------------------------------

Macro DrawLine2DDY p1X, p1Y, p2X, p2Y

	local l1, lp, nxt

	mov dx, 1

	mov ax, [p1X]

	cmp ax, [p2X]

	jbe l1

	neg dx ; turn delta to -1

l1:


	mov ax, [p1X]

	mov [pointX], ax

	mov ax, [p1Y]

	mov [pointY], ax

	mov bx, [p2Y]

	sub bx, [p1Y]

	absolute bx

	mov cx, [p2X]

	sub cx, [p1X]

	absolute cx


	mov ax, [p2Y]

	shr ax, 1 ; div by 2 

	neg ax

	add ax,bx

	mov [TempW], ax


	mov ax, [p2Y]

lp:

	pusha

	call PIXEL

	popa

	inc [pointY]

	cmp [TempW], 0

	jl nxt

	sub [TempW], bx ; bx = (p2Y - p1Y) = deltay

	add [pointX], dx ; dx = delta

nxt:

	add [TempW], cx ; cx = abs(p2X - p1X) = daltax

	cmp [pointY], ax ; ax = p2Y

	jne lp

	call PIXEL

ENDM DrawLine2DDY                           

;----------------

Macro DrawLine2DDX p1X, p1Y, p2X, p2Y

	local l1, lp, nxt




	mov dx, 1

	mov ax, [point1Y]

	cmp ax, [point2Y]

	jbe l1

	neg dx ; turn delta to -1

l1:


	mov ax, [point1X]

	mov [pointX], ax

	mov ax, [point1Y]

	mov [pointY], ax

	mov bx, [point2X]

	sub bx, [point1X]

	absolute bx

	mov cx, [point2Y]

	sub cx, [point1Y]

	absolute cx    



	mov ax, bx

	shr ax, 1 ; div by 2

	neg ax

	add ax,cx


	mov [TempW], ax


	mov ax, [point2X]

lp:

	pusha

	call PIXEL

	popa

	inc [pointX]

	cmp [TempW], 0

	jl nxt

	sub [TempW], bx ; bx = abs(p2X - p1X) = deltax

	add [pointY], dx ; dx = delta

nxt:

	add [TempW], cx ; cx = abs(p2Y - p1Y) = deltay

	cmp [pointX], ax ; ax = p2X

	jne lp

	call PIXEL



ENDM DrawLine2DDX

Macro absolute a

	local l1

	cmp a, 0

	jge l1

	neg a

l1:

Endm absolute                               

;

PROC DrawLine2D
	mov cx, [point1X]
	sub cx, [point2X]
	absolute cx
	mov bx, [point1Y]

	sub bx, [point2Y]

	absolute bx

	cmp cx, bx

	jae DrawLine2Dp1 ; deltaX > deltaY

	mov ax, [point1X]

	mov bx, [point2X]

	mov cx, [point1Y]

	mov dx, [point2Y]

	cmp cx, dx

	jbe DrawLine2DpNxt1 ; point1Y <= point2Y

	xchg ax, bx

	xchg cx, dx

DrawLine2DpNxt1:

	mov [point1X], ax

	mov [point2X], bx

	mov [point1Y], cx

	mov [point2Y], dx

	DrawLine2DDY point1X, point1Y, point2X, point2Y

	ret

DrawLine2Dp1:

	mov ax, [point1X]

	mov bx, [point2X]

	mov cx, [point1Y]

	mov dx, [point2Y]

	cmp ax, bx

	jbe DrawLine2DpNxt2 ; point1X <= point2X

	xchg ax, bx

	xchg cx, dx

DrawLine2DpNxt2:

	mov [point1X], ax

	mov [point2X], bx

	mov [point1Y], cx

	mov [point2Y], dx

	DrawLine2DDX point1X, point1Y, point2X, point2Y

	ret

ENDP DrawLine2D

;-----------------

PROC PIXEL

	mov bh,0h

	mov cx,[pointX]

	mov dx,[pointY]

	mov al,[Color]

	mov ah,0Ch

	int 10h

	ret

ENDP PIXEL         

draw_line macro x ,color
    local looping space
    pusha
    mov ah, 0ch
    mov al, color
    mov cx, x 
    mov bx, 0
    mov dx, 199
    space: 
    sub dx, 20
    xor bx,bx 
    looping:
    int 10h 
    dec dx
    inc bx 
    cmp bx, 20
    je space    
    cmp dx, 0 
    jne looping          
    popa          
              
              
              
    
endm draw_line  

proc x
    mov bp,sp
    pusha 
    mov bx,[bp+2]
    mov cx,[bp+4]
    mov dx, [bp+6]
    mov ax, [bp+8]
    mov ah,0Ch
    rl:
    int 10h
    inc cx
    inc dx 
    dec bx
    cmp bx,0
    jne rl 
    
    mov bx,[bp+2]
    mov cx,[bp+4]
    mov dx, [bp+6]
    mov ax, [bp+8]
    mov ah,0ch 
    add cx,bx
    dec cx
          
    arl:
    int 10h
    dec cx
    inc dx 
    dec bx
    cmp bx,0
    jne arl
    popa      
    ret 8
    endp 

start:
mov ax,@data
mov ds, ax


  lea dx,logo
  mov ah,09
  int 21h
  realStart:
  
  lea dx,msg1
  mov ah,09
  int 21h
  
  xor ax,ax
  mov ah,01h
  int 21h
  xor ah,ah 
  cmp ax,30h
  jb realStart
  cmp ax,39h
  ja realStart
  sub ax,30h 
  mov cx,100
  mul cx
  xor bx,bx
  mov bx,ax
  mov ah,01h
  int 21h
  xor ah,ah 
  cmp ax,30h
  jb realStart
  cmp ax,39h
  ja realStart
  sub ax,30h
  mov cx,10
  mul cx
  add bx,ax
   mov ah,01h
  int 21h   
  xor ah,ah 
  cmp ax,30h
  jb realStart
  cmp ax,39h
  ja realStart 
  sub ax,30h
  add bx,ax
  cmp bx,320
  ja realStart
  
  cmp bx, w
  jb realStart
    
  push bx 
  
  s:
  lea dx,msg1
  mov ah,09
  int 21h
  xor ax,ax
  mov ah,01h
  int 21h
  xor ah,ah
  sub ax,30h 
  mov cx,100
  mul cx
  xor bx,bx
  mov bx,ax
  mov ah,01h
  int 21h
  xor ah,ah 
  sub ax,30h
  mov cx,10
  mul cx
  add bx,ax
   mov ah,01h
  int 21h   
  xor ah,ah 
  sub ax,30h
  add bx,ax
  cmp bx,320
  ja s 
  
  cmp bx, w
  jb s
  
   push bx   
     mov ah, 0

     mov al, 13h 

     int 10h 
  
    
  pop bx
  pop cx   
  cmp bx,cx
  ja ibbx
  jbe ibcx
  ibbx: 
   draw_line cx, 4
   draw_line bx, 14
   mov redLine, cx
   mov yellowLine, bx
   jmp ddl
  ibcx: 
  draw_line bx, 4
  draw_line cx, 14
  mov redLine, bx
  mov yellowLine, cx
  ddl:

; draw upper line:



    mov cx, w  ; column

    mov dx, 120     ; row

    mov al, 15     ; white

u1: mov ah, 0ch    ; put pixel

    int 10h

    

    dec cx

    cmp cx, 0

    ja u1

 

; draw bottom line:



    mov cx, w  ; column

    mov dx, 120+h   ; row

    mov al, 15     ; white

u2: mov ah, 0ch    ; put pixel

    int 10h

    

    dec cx

    cmp cx, 0

    ja u2

 

; draw left line:



    mov cx, 0    ; column

    mov dx, 120+h   ; row

    mov al, 15     ; white

u3: mov ah, 0ch    ; put pixel

    int 10h

    

    dec dx

    cmp dx, 120

    ja u3 

    

    

; draw right line:



    mov cx, w  ; column

    mov dx, 120+h   ; row

    mov al, 15     ; white

u4: mov ah, 0ch    ; put pixel

    int 10h

    

    dec dx

    cmp dx, 120

    ja u4    

                  

; draw the right part of the roof:

                  

	mov [Color], 0Fh

	mov [point1X], 0

	mov [point2X], w/2

	mov [point1Y], 120

	mov [point2Y], 90

	call DrawLine2D         

                  

; draw the left part of the roof:

                  

	mov [Color], 0Fh

	mov [point1X], w/2

	mov [point2X], w

	mov [point1Y], 90

	mov [point2Y], 120

	call DrawLine2D   

	               

	               

	    mov al, xColor
	    mov dx, 100
	    mov cx, 290
	    mov bx, 20
	    jmp print
	      
          
	               



; pause the screen for dos compatibility:



;wait for keypress

  click:
  mov ah,00
  int 16h
  
  cmp ah, 75
  je left
  cmp ah, 72
  je up
  cmp ah, 77
  je right
  cmp ah, 80
  je down
  
  jmp click
           
  left:
  push 0
  push dx
  push cx
  push bx
  call x
  
  mov al,xColor 
  sub cx,jmpLength
  cmp cx, 0
  jg  print
  add cx, jmpLength 
  jmp click
  
  right:
  push 0
  push dx
  push cx
  push bx
  call x
  
  mov al,xColor 
  add cx,jmpLength
  push bx
  push cx
  
  mov cx,bx
  mov bx,320
  sub bx,cx
  pop cx
  
  cmp cx, bx
  jbe  printbx 
  pop bx
  sub cx, jmpLength
  jmp print 
     
  
  up:
  push 0
  push dx
  push cx
  push bx
  call x
  
  mov al,xColor 
  sub dx,jmpLength
  cmp dx, 0
  jg  print
  add dx, jmpLength 
  jmp print 
   
  
  down:
  push 0
  push dx
  push cx
  push bx
  call x
 
  mov al,xColor  
  add dx,jmpLength
  
  push bx
  push cx
  mov cx,bx
  mov bx,200
  sub bx,cx
  pop cx
  
  cmp dx, bx
  jbe  printbx 
  pop bx
  sub dx, jmpLength 
  jmp print 
    
  printbx:
  pop bx
  print: 
     cmp cx, redLine 
     jb red
    
  
     cmp cx,yellowLine
     jb yellow
     jae reset 
     
     
     
     
     jmp click 			
     
   yellow:
   mov xColor, 14
   mov al,xColor 
     push ax
     push dx
     push cx
     push bx
     call x
   jmp click
   red:  
   mov xColor, 4
   mov al,xColor 
     push ax
     push dx
     push cx
     push bx
     call x
   jmp click 
   reset:
   mov xColor, 2
   mov al,xColor 
     push ax
     push dx
     push cx
     push bx
     call x
   jmp click 
    


; return to text mode:

  mov ah,00

  mov al,03 ;text mode 3

  int 10h







ret

